"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.myContainer = void 0;
const inversify_1 = require("inversify");
const Types_1 = require("./Types");
const UserDomainService_1 = require("../../domain/services/UserDomainService");
const UserDatabaseService_1 = require("../adapters/secondary/services/UserDatabaseService");
const AuthController_1 = __importDefault(require("../adapters/primary/rest/AuthController"));
const VideoDatabaseService_1 = require("../adapters/secondary/services/VideoDatabaseService");
const VideoDomainService_1 = require("../../domain/services/VideoDomainService");
const VideoController_1 = __importDefault(require("../adapters/primary/rest/VideoController"));
const ChannelDatabaseService_1 = require("../adapters/secondary/services/ChannelDatabaseService");
const ChannelDomainService_1 = require("../../domain/services/ChannelDomainService");
const ChannelController_1 = __importDefault(require("../adapters/primary/rest/ChannelController"));
const BroadcasterDatabaseService_1 = require("../adapters/secondary/services/BroadcasterDatabaseService");
const BroadcasterDomainService_1 = require("../../domain/services/BroadcasterDomainService");
const BroadcasterController_1 = __importDefault(require("../adapters/primary/rest/BroadcasterController"));
const PostDatabaseService_1 = require("../adapters/secondary/services/PostDatabaseService");
const PostDomainService_1 = require("../../domain/services/PostDomainService");
const PostController_1 = __importDefault(require("../adapters/primary/rest/PostController"));
const UserV2Controller_1 = __importDefault(require("../adapters/primary/rest/UserV2Controller"));
const SupportMessageDatabaseService_1 = require("../adapters/secondary/services/SupportMessageDatabaseService");
const SupportMessageController_1 = __importDefault(require("../adapters/primary/rest/SupportMessageController"));
const myContainer = new inversify_1.Container();
exports.myContainer = myContainer;
// Aquí registrarás tus dependencias
myContainer.bind(Types_1.Types.IUserRepository).to(UserDatabaseService_1.UserDatabaseService);
myContainer.bind(Types_1.Types.IUserDomainService).to(UserDomainService_1.UserDomainService);
myContainer.bind(Types_1.Types.AuthController).to(AuthController_1.default);
myContainer.bind(Types_1.Types.IVideoRepository).to(VideoDatabaseService_1.VideoDatabaseService);
myContainer.bind(Types_1.Types.IVideoDomainService).to(VideoDomainService_1.VideoDomainService);
myContainer.bind(Types_1.Types.VideoController).to(VideoController_1.default);
myContainer.bind(Types_1.Types.IChannelRepository).to(ChannelDatabaseService_1.ChannelDatabaseService);
myContainer.bind(Types_1.Types.IChannelDomainService).to(ChannelDomainService_1.ChannelDomainService);
myContainer.bind(Types_1.Types.ChannelController).to(ChannelController_1.default);
myContainer.bind(Types_1.Types.IBroadcasterRepository).to(BroadcasterDatabaseService_1.BroadcasterDatabaseService);
myContainer.bind(Types_1.Types.IBroadcasterDomainService).to(BroadcasterDomainService_1.BroadcasterDomainService);
myContainer.bind(Types_1.Types.BroadcasterController).to(BroadcasterController_1.default);
myContainer.bind(Types_1.Types.IPostRepository).to(PostDatabaseService_1.PostDatabaseService);
myContainer.bind(Types_1.Types.IPostDomainService).to(PostDomainService_1.PostDomainService);
myContainer.bind(Types_1.Types.PostController).to(PostController_1.default);
myContainer.bind(Types_1.Types.UserV2Controller).to(UserV2Controller_1.default);
myContainer.bind(Types_1.Types.ISupportMessageRepository).to(SupportMessageDatabaseService_1.SupportMessageDatabaseService);
myContainer.bind(Types_1.Types.SupportMessageController).to(SupportMessageController_1.default);
myContainer.bind(Types_1.Types.ISupportMessageDomainService).to(SupportMessageDatabaseService_1.SupportMessageDatabaseService);
